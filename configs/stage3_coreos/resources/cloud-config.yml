#cloud-config

coreos:
  # TODO: during the image customization process, consider adding custom
  # network handling units directly instead of this approach.
  units:
    # Stop networkd to prevent races with the following actions.
    - name: systemd-networkd.service
      command: stop

    # Really make sure the interfaces are down.
    - name: down-interfaces.service
      command: start
      content: |
        [Service]
        Type=oneshot
        ExecStart=/usr/bin/ip link set eth0 down
        ExecStart=/usr/bin/ip addr flush dev eth0

    # Generate a network config based on values from epoxy.ip= in /proc/cmdline.
    - name: generate-eth0-config.service
      command: start
      content: |
        [Service]
        Type=oneshot
        ExecStart=/usr/share/oem/generate_network_config.sh /etc/systemd/network/00-eth0.network

    # Restarts the networkd service using our new config.
    - name: systemd-networkd.service
      command: restart

    # Move the Docker data volume and add requirements on /cache/docker volume.
    - name: "docker.service"
      drop-ins:
        - name: "10-data-root.conf"
          content: |
            [Service]
            # docker.service uses DOCKER_OPTS for extra drop-in options.
            Environment=DOCKER_OPTS="--data-root=/cache/docker --exec-root=/cache/docker/exec"

            [Unit]
            # The docker service depends on the /cache/docker volume.
            Requires=cache-docker.mount
            After=cache-docker.mount

    # Format the /cache volumes using /dev/sda.
    - name: format-cache.service
      command: start
      content: |
        [Unit]
        Before=docker.service cache-docker.mount cache-data.mount cache-core.mount
        RequiresMountsFor=/cache
        ConditionPathExists=!/cache/docker
        ConditionPathExists=!/cache/data
        ConditionPathExists=!/cache/core
        [Service]
        Type=oneshot
        # Create cache directory in root filesystem.
        ExecStart=/usr/bin/mkdir -p /cache

        # Clear any remaining LVM configs from prior installations.
        ExecStart=/usr/sbin/dmsetup remove_all --force

        # For a 1TB disk, this is roughly:
        #  * 900G for core and experiment data.
        #  * 100G for docker image cache.
        # Note: systemd translates double percent (%%) to a single percent.
        ExecStart=/usr/sbin/parted --align=optimal --script /dev/sda \
            mklabel gpt \
            mkpart data xfs 0%% 90%% \
            mkpart docker xfs 90%% 100%%

        # Format and label each partition.
        # Note: the labels could make the formatting conditional in the future.
        ExecStart=/usr/sbin/mkfs.xfs -f -L cache-data /dev/sda1
        ExecStart=/usr/sbin/mkfs.xfs -f -L cache-docker /dev/sda2

    # Mount /cache/docker.
    - name: cache-docker.mount
      enable: true
      content: |
        [Unit]
        Description=Mount Docker Data Volume
        Before=docker.service
        After=format-cache.service
        Requires=format-cache.service

        [Mount]
        What=/dev/disk/by-label/cache-docker
        Where=/cache/docker
        Type=xfs
        Options=defaults

        [Install]
        RequiredBy=docker.service

    # Mount /cache/data.
    - name: cache-data.mount
      enable: true
      content: |
        [Unit]
        Description=Mount Experiment Data Volume
        Before=docker.service
        After=format-cache.service
        Requires=format-cache.service

        [Mount]
        What=/dev/disk/by-label/cache-data
        Where=/cache/data
        Type=xfs
        Options=defaults,prjquota

        [Install]
        RequiredBy=docker.service

    # Add a new unit to run the post-boot script after the network is online.
    - name: setup-after-boot.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=A post-boot setup command.
        # Both directives are required.
        # It is unclear why Requires= alone is not sufficient (but it isn't).
        Requires=network-online.target
        After=systemd-networkd-wait-online.service format-cache.service

        [Service]
        Type=oneshot
        ExecStart=/usr/share/oem/setup_after_boot.sh


# TODO: collect list of ssh keys from a metadata service during post-boot setup.
ssh_authorized_keys:
 - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCvIKeMHcEO1xnTmEdMY6E9Y4pBdGBCDXZnuQC5ZPjNQr9IG3ytw0OxwyCObAzSr+WOymYv6Cwm4Ckz2jc/bWygzWJH+DMdldZe7HVQu4YxuegqahIkB0D1OzaZGNctBgTp9bmpWGxyek7U8ff7GTiFqhcms4Oer4rdd0gqUhmv3LnRWQqrIDblrBosHBED/zXgjbOj3beWCA3xHDCaui/gkbmp0J2jzCnlsc7eSI0d6Jro2UhbiS2ssxVQsLViLh5okJJeb2JyzbLbcpselUg9DSwSk0pFH/wHL0usjvBisF/fEP8eQ1svq6N6gncvPlgoJaSvtACmDvIFkU4baA2v pboothe@pboothe3.nyc.corp.google.com"
 - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDE0mkNqSerk77U6xy0/FpU+G7WdXboAvXPbK3xh5f1WCegNykjkCcgb+WVZeFudEKdMG2v3RisdKNWsRBAfAs5WLiszqQwSTDqBsjljq7vpE3BcqRIof2Tgf3fpyQ88A+KZIlCUBY8Z8NPUKXAgdhAwOmzM+IQDtX3XMQ67fPP3d5DraA0aaV5GCEZoxV+/V2X/JwhxsnaYuSvix4ow0l5pC5VxOSMatqcSLC37E7XMBY7o88C4RNuFQlwEjbwKRRFuBoZrCkjXK1F9AZDv8nzqnNO1MPf4vXkcNqL2k0PGulTDt+EIkschxirPqAU13WcBZzwdj+5LTbht7ttcAq9 mattmathis@mattmathis.mtv.corp.google.com"
 - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcmNS78HLR2Q/22if7mT8yoICDQbk+wbHJqDAWWGui/V7HrzDZn9X2KtyxLPu6sdD3oohmZWYSQ9JVnIT/XQCCKrYiQt5Q/Jof4MG/evJnQEgNcmF6Cb6cFcG7dichGRiWqlNMwMG7GuvDXAsNQ/unrZFfeQTPHpKkDJkspcwxKH0+9fLgerLsJRlcAsyCb1AWtG8pwD2yKyispWhVCDKU1RbEfohxSj9tUcJJewXaiMGfn5T/t3dCLAx3zv3YrAtETAmRqfRwdztKevwqVTXU78rr9HRBwD2+YC0T0mdVUljeGhU3UzQlxSa4ZeIu1FimpyAv7jz1hu/hliQkl8BN nkinkade@npk"
 - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/WS0rcnRQeSBnRf3IlTe+ynYjYXsErpc8DOkXGhhfzQdln7aayuT/d2autfL/TfACGV5X9ttWRIDN0k0UzqgbWwo6tlzrcm7jJgLahxdd4sdajdKeGdQtb772cZ867M2KbtU755s6WddstFNdSaK/3Pi/z3qXNSNjwNIhAmxUYLVqKYj8/kQEncQfx/K3wvRc0+gzvnuhQdKsw9DjUgLjFR+UnhZMbRdYW9LzGUyidcnxO/HNFJDihJhC6V5Eqk56hUyj7noiT4Q3HIr6MQDhzPLmlaZPSdQihO2sZlBSHcipT4bUOTqmDhfpjjkI+F+Mo1LhiU2DOelLK5lNP6gV gfr@gfr-macbookpro3.roam.corp.google.com"
 - "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAsR0paNn6CG2et6U+B1mtClJhns00qEOc4/9idjzB/TwCB8Gx+8sGtiJYXpvLQekr1gU3CsFRFBxpjSBQ875BDCRd4/LYnChptv9inDlzF//W31k4ZWINqfOq0qoxfGpBu9jE0Yq2WypnDn9BNxKZdBjCbaIX+pxCx6ytkHmto/uix9exL1y+yQ7G85sjoXecfdsje0Mo8ZOO5ZYebEpKRhW3JhxKqklsK1SORa6WGnWySCy3dpj+XMRRrigKW0Mm4beqdl3e0b6pb3OwMtlgtBmgq246JLRnnasXCnEyQbN5DQStLPCgJGhuAoVuacGZryHTbrc4VL4d2JQfr1iJxQ== sstuart@sstuart.mtv.corp.google.com"
 - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDBsiVc59/cEXvB56hhFjqr189iw44nMtP8Hu6MgLaWCecjY/ICVrWN1rL0hmfyuXarYVyKcR5+81c+VJPT6zNUKiu+66TrqLex64ELyVZG0Meh9P+7VHO2is/iGBTUUfiXlvEqfALTdoUrmJdtfJSBSVtcGV2YfiHxoVdhj02nCpE90Ng6/cKr6omOEl4Ggbtx1oR0bUtBoEyg4P0XjqtuHCvSnp9lbWNXikT7m2yYAs340iDxSbS5vKN36RmprVCHwnXXp+sk6pNXG8d2EmbT+OIdvCZvW890EHtszU8Te8lOKti/ChNgM2hcAS4Gs9hyZnVtU2BlQ8LI/qV7Cm4fPeqCoHDC6Fdklh4LeBsfrOdrezS6se1xOef12WgZQqkv/v9gHAcF8QP1ZlsIoizmh8uuBlEdTaIJHZTMWlJGZtWWcjFKeT0APKjEVriZSKeJnvgN2QR89XMi9XdtISgh2zT5XNZLj7k9NrgMHlOs5DauYA025lTPhl9BTN0eChcCqIYfLE/jOWhFtLhoKoUkYvddY5h8wtDdHCmlXNg8nXtSRT/aqcGKYPRuCzHtneRt1oUc5Uzxpxr3GR9OGD06xaePUpcd082q0PZ04i37cfzhaM+ton047FCWvC3Wtdp8CYxW9Ouiqd4X2XRSpzz9pWTaUvJC0VxqpG1KohROpQ== critzo@buzzsaw"
 - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDR5EylJIM/ZF9mSUwOSlysILS/rPfi/y6EvO19oOR+LrGmeATKFfFePKZrRD5TufNaGubxG1CeYUQ7ib50qYtivjfcf0eFJZtN3oEopLwbtihwD87Bv2jJX1YgRAMQ7Fh9FcwtOL4CdpCZ/VHe+EG32G2S9krn2SW1GifJWc/gBpb4S21igtpuQJoHAU/sxxxzEZWUm2BCUvoIQoCcwOqoor5DPB8hM4Jz0rM6uDO30EUO8YVjHr9cz8j8MA0WbLGjk7xfuIrx7SqHgoairC9s0N4AafHaKYzbvG/lz336wgpGC6gktAkHljUHnerwESF7ABTIh8iwKiq27HhO0hOt soltesz@stephens-imac-4.lan"
 - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+aqZcVqZSRLKN+kjyy6U+XyzgppO7unk8Ew3rb7vz+WvVVoeLE2UzakrX5wj+M8WcvYkJfwgOOQFtOkcRs+7EPXwuDsY8AjosiRn2bfX5BjT7FKQC+Nfbc329sONUYRhNw+2R3ERyx1Pzo3c3iAJaWH/UXSnehU76HVjknjTpkmEHnKVkegeG3k5ofSZvxrnVnSOvMrmh4+gP9viq5GCjp4QiN2gCWEyxxVeMFD4+2keUrnwYQ27SrpIOeEerh8Z7ABKCttLO5lfEHKFyKoIsaum8gC3EZVaQ2WG6p5D6ampPMwEETY1EvYmeQHqELbfAz1WxD9KbxxER3tiwCxgV yachang@yachang33.nyc.corp.google.com"
 - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDhnC8VDQyHUHBsmwTmprMSrPQ3qkuFyemkNO1OBSWEyhVRPdp7M+tvCY0QqbKhnMY0ImEV/g8+zubnA1TAI4JQVbfDStEi5TBGONRyUk/B10sV9uNRGFqmBJZmEE6XcsHvWuBgX4icWCz+XPXnqWHqyTUY4YGkPAeKVjQD9zZjK581hFUKowrSZC9SUagJ160h0zcG1O4n14EkKlwDfYp4DDbYHI5QF+KTjr6xwbK5IZDr4K2GzvcKq8SHj+g5zaWhuBB8ruqvgBwqOF7ZNvXfTH45hUjL+BY0e6IZUPv7kW0yFzcvBiPmBpkPYCtY0SDd8wFPKjYyYshfeuTNE+eN roberto@measurementlab.net"

# Creates the reboot-api service user. This user is used exclusively to issue
# a "sudo systemctl reboot -i" on the node.
users:
  - name: "reboot-api"
    system: true
    groups: ["sudo"]
    ssh-authorized-keys:
      - "command=\"sudo /usr/bin/systemctl reboot -i\" ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDd/MjyFiDvvw9IR6crFgFnLtZT4pQw6Pjv9jSs7XKasgsnr8dTjLSb91sYPqKpz2CHpcHJfYtqFZvNePR44BEQ/Pf9DcS9ico1OXOunkqC3L9mw6MaPE5b5GjatP0eXGPcDUdKhDCsL43PjEs8hJ+/hTrDrv1qE/dDYpfsnIVcSj3Zd+uOd+c+RY8MPzaRytYlaFytT/R8R4X8aC9xYCLzcPQ8XIgVUGscwI6WhiFCCiU2sffeeNPzcoRJ9T+P2j6LQSbS1P8Clg89BdYucRCcKWED3lVQ9v6tC6Y8xaGeaEEyB7+B5p8EoIYRu90idrPVSjSsjBYP1UUdo2h7R+VH reboot-api@"

